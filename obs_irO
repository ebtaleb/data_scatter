; ModuleID = 'obs.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.test = type { i32, i32 }

@access_array = global [4 x i32] [i32 0, i32 1, i32 0, i32 1], align 16
@address_array = common global [2 x i32*] zeroinitializer, align 16
@access_counter = common global i32 0, align 4

; Function Attrs: nounwind uwtable
define i32 @rand_a_b(i32 %M, i32 %N) #0 {
  %1 = tail call i32 @rand() #2
  %2 = sub i32 1, %M
  %3 = add i32 %2, %N
  %4 = sdiv i32 2147483647, %3
  %5 = add nsw i32 %4, 1
  %6 = sdiv i32 %1, %5
  %7 = add nsw i32 %6, %M
  ret i32 %7
}

; Function Attrs: nounwind
declare i32 @rand() #1

; Function Attrs: nounwind uwtable
define i32* @access() #0 {
  %1 = tail call i32 @rand() #2
  %2 = sdiv i32 %1, 1073741824
  %3 = tail call i32 @rand() #2
  %4 = sdiv i32 %3, 1073741824
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %5
  %7 = load i32*, i32** %6, align 8, !tbaa !1
  %8 = load i32, i32* %7, align 4, !tbaa !5
  %9 = sext i32 %2 to i64
  %10 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %9
  %11 = load i32*, i32** %10, align 8, !tbaa !1
  %12 = load i32, i32* %11, align 4, !tbaa !5
  store i32 %12, i32* %7, align 4, !tbaa !5
  store i32 %8, i32* %11, align 4, !tbaa !5
  %13 = bitcast i32** %6 to i64*
  %14 = ptrtoint i32* %7 to i64
  %15 = bitcast i32** %10 to i64*
  %16 = ptrtoint i32* %11 to i64
  store i64 %16, i64* %13, align 8, !tbaa !1
  store i64 %14, i64* %15, align 8, !tbaa !1
  %17 = load i32, i32* @access_counter, align 4, !tbaa !5
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* @access_counter, align 4, !tbaa !5
  %19 = sext i32 %17 to i64
  %20 = getelementptr inbounds [4 x i32], [4 x i32]* @access_array, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4, !tbaa !5
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %22
  %24 = load i32*, i32** %23, align 8, !tbaa !1
  ret i32* %24
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  %t = alloca %struct.test, align 4
  %1 = tail call i64 @time(i64* null) #2
  %2 = trunc i64 %1 to i32
  tail call void @srand(i32 %2) #2
  %3 = bitcast %struct.test* %t to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  store i32 0, i32* @access_counter, align 4, !tbaa !5
  %4 = getelementptr inbounds %struct.test, %struct.test* %t, i64 0, i32 1
  store i32* %4, i32** getelementptr inbounds ([2 x i32*], [2 x i32*]* @address_array, i64 0, i64 1), align 8, !tbaa !1
  %5 = getelementptr inbounds %struct.test, %struct.test* %t, i64 0, i32 0
  store i32* %5, i32** getelementptr inbounds ([2 x i32*], [2 x i32*]* @address_array, i64 0, i64 0), align 16, !tbaa !1
  %6 = call i32 @rand() #2
  %7 = sdiv i32 %6, 1073741824
  %8 = call i32 @rand() #2
  %9 = sdiv i32 %8, 1073741824
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %10
  %12 = load i32*, i32** %11, align 8, !tbaa !1
  %13 = load i32, i32* %12, align 4, !tbaa !5
  %14 = sext i32 %7 to i64
  %15 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %14
  %16 = load i32*, i32** %15, align 8, !tbaa !1
  %17 = load i32, i32* %16, align 4, !tbaa !5
  store i32 %17, i32* %12, align 4, !tbaa !5
  store i32 %13, i32* %16, align 4, !tbaa !5
  %18 = bitcast i32** %11 to i64*
  %19 = ptrtoint i32* %12 to i64
  %20 = bitcast i32** %15 to i64*
  %21 = ptrtoint i32* %16 to i64
  store i64 %21, i64* %18, align 8, !tbaa !1
  store i64 %19, i64* %20, align 8, !tbaa !1
  %22 = load i32, i32* @access_counter, align 4, !tbaa !5
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* @access_counter, align 4, !tbaa !5
  %24 = sext i32 %22 to i64
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* @access_array, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4, !tbaa !5
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %27
  %29 = load i32*, i32** %28, align 8, !tbaa !1
  store i32 10, i32* %29, align 4, !tbaa !5
  %30 = call i32 @rand() #2
  %31 = sdiv i32 %30, 1073741824
  %32 = call i32 @rand() #2
  %33 = sdiv i32 %32, 1073741824
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %34
  %36 = load i32*, i32** %35, align 8, !tbaa !1
  %37 = load i32, i32* %36, align 4, !tbaa !5
  %38 = sext i32 %31 to i64
  %39 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %38
  %40 = load i32*, i32** %39, align 8, !tbaa !1
  %41 = load i32, i32* %40, align 4, !tbaa !5
  store i32 %41, i32* %36, align 4, !tbaa !5
  store i32 %37, i32* %40, align 4, !tbaa !5
  %42 = bitcast i32** %35 to i64*
  %43 = ptrtoint i32* %36 to i64
  %44 = bitcast i32** %39 to i64*
  %45 = ptrtoint i32* %40 to i64
  store i64 %45, i64* %42, align 8, !tbaa !1
  store i64 %43, i64* %44, align 8, !tbaa !1
  %46 = load i32, i32* @access_counter, align 4, !tbaa !5
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* @access_counter, align 4, !tbaa !5
  %48 = sext i32 %46 to i64
  %49 = getelementptr inbounds [4 x i32], [4 x i32]* @access_array, i64 0, i64 %48
  %50 = load i32, i32* %49, align 4, !tbaa !5
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %51
  %53 = load i32*, i32** %52, align 8, !tbaa !1
  store i32 20, i32* %53, align 4, !tbaa !5
  %54 = call i32 @rand() #2
  %55 = sdiv i32 %54, 1073741824
  %56 = call i32 @rand() #2
  %57 = sdiv i32 %56, 1073741824
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %58
  %60 = load i32*, i32** %59, align 8, !tbaa !1
  %61 = load i32, i32* %60, align 4, !tbaa !5
  %62 = sext i32 %55 to i64
  %63 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %62
  %64 = load i32*, i32** %63, align 8, !tbaa !1
  %65 = load i32, i32* %64, align 4, !tbaa !5
  store i32 %65, i32* %60, align 4, !tbaa !5
  store i32 %61, i32* %64, align 4, !tbaa !5
  %66 = bitcast i32** %59 to i64*
  %67 = ptrtoint i32* %60 to i64
  %68 = bitcast i32** %63 to i64*
  %69 = ptrtoint i32* %64 to i64
  store i64 %69, i64* %66, align 8, !tbaa !1
  store i64 %67, i64* %68, align 8, !tbaa !1
  %70 = load i32, i32* @access_counter, align 4, !tbaa !5
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* @access_counter, align 4, !tbaa !5
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds [4 x i32], [4 x i32]* @access_array, i64 0, i64 %72
  %74 = load i32, i32* %73, align 4, !tbaa !5
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %75
  %77 = load i32*, i32** %76, align 8, !tbaa !1
  %78 = load i32, i32* %77, align 4, !tbaa !5
  %79 = call i32 @rand() #2
  %80 = sdiv i32 %79, 1073741824
  %81 = call i32 @rand() #2
  %82 = sdiv i32 %81, 1073741824
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %83
  %85 = load i32*, i32** %84, align 8, !tbaa !1
  %86 = load i32, i32* %85, align 4, !tbaa !5
  %87 = sext i32 %80 to i64
  %88 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %87
  %89 = load i32*, i32** %88, align 8, !tbaa !1
  %90 = load i32, i32* %89, align 4, !tbaa !5
  store i32 %90, i32* %85, align 4, !tbaa !5
  store i32 %86, i32* %89, align 4, !tbaa !5
  %91 = bitcast i32** %84 to i64*
  %92 = ptrtoint i32* %85 to i64
  %93 = bitcast i32** %88 to i64*
  %94 = ptrtoint i32* %89 to i64
  store i64 %94, i64* %91, align 8, !tbaa !1
  store i64 %92, i64* %93, align 8, !tbaa !1
  %95 = load i32, i32* @access_counter, align 4, !tbaa !5
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* @access_counter, align 4, !tbaa !5
  %97 = sext i32 %95 to i64
  %98 = getelementptr inbounds [4 x i32], [4 x i32]* @access_array, i64 0, i64 %97
  %99 = load i32, i32* %98, align 4, !tbaa !5
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [2 x i32*], [2 x i32*]* @address_array, i64 0, i64 %100
  %102 = load i32*, i32** %101, align 8, !tbaa !1
  %103 = load i32, i32* %102, align 4, !tbaa !5
  %104 = add nsw i32 %103, %78
  call void @llvm.lifetime.end(i64 8, i8* %3) #2
  ret i32 %104
}

; Function Attrs: nounwind
declare void @srand(i32) #1

; Function Attrs: nounwind
declare i64 @time(i64*) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !3, i64 0}
