
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x133>
  400248:	78 38                	js     400282 <_init-0x126>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 ae 63 de 0a 8c    	add    BYTE PTR [rsi-0x73f5219d],ch
  400289:	0c c3                	or     al,0xc3
  40028b:	04 1e                	add    al,0x1e
  40028d:	05 37 35 b3 18       	add    eax,0x18b33537
  400292:	09 58 59             	or     DWORD PTR [rax+0x59],ebx
  400295:	0f b0 3a             	cmpxchg BYTE PTR [rdx],bh

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     eax,DWORD PTR [rax]
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	1d 00 00 00 20       	sbb    eax,0x20000000
	...

Disassembly of section .dynstr:

0000000000400300 <.dynstr>:
  400300:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  400304:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  400306:	73 6f                	jae    400377 <_init-0x31>
  400308:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
  40030d:	6c                   	ins    BYTE PTR es:[rdi],dx
  40030e:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400315:	72 74                	jb     40038b <_init-0x1d>
  400317:	5f                   	pop    rdi
  400318:	6d                   	ins    DWORD PTR es:[rdi],dx
  400319:	61                   	(bad)  
  40031a:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  400321:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400322:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400323:	5f                   	pop    rdi
  400324:	73 74                	jae    40039a <_init-0xe>
  400326:	61                   	(bad)  
  400327:	72 74                	jb     40039d <_init-0xb>
  400329:	5f                   	pop    rdi
  40032a:	5f                   	pop    rdi
  40032b:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  40032e:	49                   	rex.WB
  40032f:	42                   	rex.X
  400330:	43 5f                	rex.XB pop r15
  400332:	32 2e                	xor    ch,BYTE PTR [rsi]
  400334:	32 2e                	xor    ch,BYTE PTR [rsi]
  400336:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400338 <.gnu.version>:
  400338:	00 00                	add    BYTE PTR [rax],al
  40033a:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .gnu.version_r:

0000000000400340 <.gnu.version_r>:
  400340:	01 00                	add    DWORD PTR [rax],eax
  400342:	01 00                	add    DWORD PTR [rax],eax
  400344:	01 00                	add    DWORD PTR [rax],eax
  400346:	00 00                	add    BYTE PTR [rax],al
  400348:	10 00                	adc    BYTE PTR [rax],al
  40034a:	00 00                	add    BYTE PTR [rax],al
  40034c:	00 00                	add    BYTE PTR [rax],al
  40034e:	00 00                	add    BYTE PTR [rax],al
  400350:	75 1a                	jne    40036c <_init-0x3c>
  400352:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400358:	2c 00                	sub    al,0x0
  40035a:	00 00                	add    BYTE PTR [rax],al
  40035c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400360 <.rela.dyn>:
  400360:	f8                   	clc    
  400361:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  400364:	00 00                	add    BYTE PTR [rax],al
  400366:	00 00                	add    BYTE PTR [rax],al
  400368:	06                   	(bad)  
  400369:	00 00                	add    BYTE PTR [rax],al
  40036b:	00 02                	add    BYTE PTR [rdx],al
	...

Disassembly of section .rela.plt:

0000000000400378 <.rela.plt>:
  400378:	18 10                	sbb    BYTE PTR [rax],dl
  40037a:	60                   	(bad)  
  40037b:	00 00                	add    BYTE PTR [rax],al
  40037d:	00 00                	add    BYTE PTR [rax],al
  40037f:	00 07                	add    BYTE PTR [rdi],al
  400381:	00 00                	add    BYTE PTR [rax],al
  400383:	00 01                	add    BYTE PTR [rcx],al
	...
  40038d:	00 00                	add    BYTE PTR [rax],al
  40038f:	00 20                	add    BYTE PTR [rax],ah
  400391:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  400394:	00 00                	add    BYTE PTR [rax],al
  400396:	00 00                	add    BYTE PTR [rax],al
  400398:	07                   	(bad)  
  400399:	00 00                	add    BYTE PTR [rax],al
  40039b:	00 02                	add    BYTE PTR [rdx],al
	...

Disassembly of section .init:

00000000004003a8 <_init>:
  4003a8:	48 83 ec 08          	sub    rsp,0x8
  4003ac:	48 8b 05 45 0c 20 00 	mov    rax,QWORD PTR [rip+0x200c45]        # 600ff8 <_DYNAMIC+0x1d0>
  4003b3:	48 85 c0             	test   rax,rax
  4003b6:	74 05                	je     4003bd <_init+0x15>
  4003b8:	e8 33 00 00 00       	call   4003f0 <__gmon_start__@plt>
  4003bd:	48 83 c4 08          	add    rsp,0x8
  4003c1:	c3                   	ret    

Disassembly of section .plt:

00000000004003d0 <__libc_start_main@plt-0x10>:
  4003d0:	ff 35 32 0c 20 00    	push   QWORD PTR [rip+0x200c32]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003d6:	ff 25 34 0c 20 00    	jmp    QWORD PTR [rip+0x200c34]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004003e0 <__libc_start_main@plt>:
  4003e0:	ff 25 32 0c 20 00    	jmp    QWORD PTR [rip+0x200c32]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003e6:	68 00 00 00 00       	push   0x0
  4003eb:	e9 e0 ff ff ff       	jmp    4003d0 <_init+0x28>

00000000004003f0 <__gmon_start__@plt>:
  4003f0:	ff 25 2a 0c 20 00    	jmp    QWORD PTR [rip+0x200c2a]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4003f6:	68 01 00 00 00       	push   0x1
  4003fb:	e9 d0 ff ff ff       	jmp    4003d0 <_init+0x28>

Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    ebp,ebp
  400402:	49 89 d1             	mov    r9,rdx
  400405:	5e                   	pop    rsi
  400406:	48 89 e2             	mov    rdx,rsp
  400409:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40040d:	50                   	push   rax
  40040e:	54                   	push   rsp
  40040f:	49 c7 c0 a0 05 40 00 	mov    r8,0x4005a0
  400416:	48 c7 c1 30 05 40 00 	mov    rcx,0x400530
  40041d:	48 c7 c7 00 05 40 00 	mov    rdi,0x400500
  400424:	e8 b7 ff ff ff       	call   4003e0 <__libc_start_main@plt>
  400429:	f4                   	hlt    
  40042a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400430 <deregister_tm_clones>:
  400430:	b8 3f 10 60 00       	mov    eax,0x60103f
  400435:	55                   	push   rbp
  400436:	48 2d 38 10 60 00    	sub    rax,0x601038
  40043c:	48 83 f8 0e          	cmp    rax,0xe
  400440:	48 89 e5             	mov    rbp,rsp
  400443:	76 1b                	jbe    400460 <deregister_tm_clones+0x30>
  400445:	b8 00 00 00 00       	mov    eax,0x0
  40044a:	48 85 c0             	test   rax,rax
  40044d:	74 11                	je     400460 <deregister_tm_clones+0x30>
  40044f:	5d                   	pop    rbp
  400450:	bf 38 10 60 00       	mov    edi,0x601038
  400455:	ff e0                	jmp    rax
  400457:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40045e:	00 00 
  400460:	5d                   	pop    rbp
  400461:	c3                   	ret    
  400462:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400466:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40046d:	00 00 00 

0000000000400470 <register_tm_clones>:
  400470:	be 38 10 60 00       	mov    esi,0x601038
  400475:	55                   	push   rbp
  400476:	48 81 ee 38 10 60 00 	sub    rsi,0x601038
  40047d:	48 c1 fe 03          	sar    rsi,0x3
  400481:	48 89 e5             	mov    rbp,rsp
  400484:	48 89 f0             	mov    rax,rsi
  400487:	48 c1 e8 3f          	shr    rax,0x3f
  40048b:	48 01 c6             	add    rsi,rax
  40048e:	48 d1 fe             	sar    rsi,1
  400491:	74 15                	je     4004a8 <register_tm_clones+0x38>
  400493:	b8 00 00 00 00       	mov    eax,0x0
  400498:	48 85 c0             	test   rax,rax
  40049b:	74 0b                	je     4004a8 <register_tm_clones+0x38>
  40049d:	5d                   	pop    rbp
  40049e:	bf 38 10 60 00       	mov    edi,0x601038
  4004a3:	ff e0                	jmp    rax
  4004a5:	0f 1f 00             	nop    DWORD PTR [rax]
  4004a8:	5d                   	pop    rbp
  4004a9:	c3                   	ret    
  4004aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000004004b0 <__do_global_dtors_aux>:
  4004b0:	80 3d 81 0b 20 00 00 	cmp    BYTE PTR [rip+0x200b81],0x0        # 601038 <__TMC_END__>
  4004b7:	75 11                	jne    4004ca <__do_global_dtors_aux+0x1a>
  4004b9:	55                   	push   rbp
  4004ba:	48 89 e5             	mov    rbp,rsp
  4004bd:	e8 6e ff ff ff       	call   400430 <deregister_tm_clones>
  4004c2:	5d                   	pop    rbp
  4004c3:	c6 05 6e 0b 20 00 01 	mov    BYTE PTR [rip+0x200b6e],0x1        # 601038 <__TMC_END__>
  4004ca:	f3 c3                	repz ret 
  4004cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004004d0 <frame_dummy>:
  4004d0:	bf 20 0e 60 00       	mov    edi,0x600e20
  4004d5:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  4004d9:	75 05                	jne    4004e0 <frame_dummy+0x10>
  4004db:	eb 93                	jmp    400470 <register_tm_clones>
  4004dd:	0f 1f 00             	nop    DWORD PTR [rax]
  4004e0:	b8 00 00 00 00       	mov    eax,0x0
  4004e5:	48 85 c0             	test   rax,rax
  4004e8:	74 f1                	je     4004db <frame_dummy+0xb>
  4004ea:	55                   	push   rbp
  4004eb:	48 89 e5             	mov    rbp,rsp
  4004ee:	ff d0                	call   rax
  4004f0:	5d                   	pop    rbp
  4004f1:	e9 7a ff ff ff       	jmp    400470 <register_tm_clones>
  4004f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4004fd:	00 00 00 

0000000000400500 <main>:
  400500:	55                   	push   rbp
  400501:	48 89 e5             	mov    rbp,rsp
  400504:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  40050b:	c7 45 f0 0a 00 00 00 	mov    DWORD PTR [rbp-0x10],0xa
  400512:	c7 45 f4 14 00 00 00 	mov    DWORD PTR [rbp-0xc],0x14
  400519:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
  40051c:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
  40051f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  400522:	03 45 f4             	add    eax,DWORD PTR [rbp-0xc]
  400525:	5d                   	pop    rbp
  400526:	c3                   	ret    
  400527:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40052e:	00 00 

0000000000400530 <__libc_csu_init>:
  400530:	41 57                	push   r15
  400532:	41 56                	push   r14
  400534:	41 89 ff             	mov    r15d,edi
  400537:	41 55                	push   r13
  400539:	41 54                	push   r12
  40053b:	4c 8d 25 ce 08 20 00 	lea    r12,[rip+0x2008ce]        # 600e10 <__frame_dummy_init_array_entry>
  400542:	55                   	push   rbp
  400543:	48 8d 2d ce 08 20 00 	lea    rbp,[rip+0x2008ce]        # 600e18 <__init_array_end>
  40054a:	53                   	push   rbx
  40054b:	49 89 f6             	mov    r14,rsi
  40054e:	49 89 d5             	mov    r13,rdx
  400551:	31 db                	xor    ebx,ebx
  400553:	4c 29 e5             	sub    rbp,r12
  400556:	48 83 ec 08          	sub    rsp,0x8
  40055a:	48 c1 fd 03          	sar    rbp,0x3
  40055e:	e8 45 fe ff ff       	call   4003a8 <_init>
  400563:	48 85 ed             	test   rbp,rbp
  400566:	74 1e                	je     400586 <__libc_csu_init+0x56>
  400568:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40056f:	00 
  400570:	4c 89 ea             	mov    rdx,r13
  400573:	4c 89 f6             	mov    rsi,r14
  400576:	44 89 ff             	mov    edi,r15d
  400579:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40057d:	48 83 c3 01          	add    rbx,0x1
  400581:	48 39 eb             	cmp    rbx,rbp
  400584:	75 ea                	jne    400570 <__libc_csu_init+0x40>
  400586:	48 83 c4 08          	add    rsp,0x8
  40058a:	5b                   	pop    rbx
  40058b:	5d                   	pop    rbp
  40058c:	41 5c                	pop    r12
  40058e:	41 5d                	pop    r13
  400590:	41 5e                	pop    r14
  400592:	41 5f                	pop    r15
  400594:	c3                   	ret    
  400595:	90                   	nop
  400596:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40059d:	00 00 00 

00000000004005a0 <__libc_csu_fini>:
  4005a0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000004005a4 <_fini>:
  4005a4:	48 83 ec 08          	sub    rsp,0x8
  4005a8:	48 83 c4 08          	add    rsp,0x8
  4005ac:	c3                   	ret    

Disassembly of section .rodata:

00000000004005b0 <_IO_stdin_used>:
  4005b0:	01 00                	add    DWORD PTR [rax],eax
  4005b2:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

00000000004005b4 <.eh_frame_hdr>:
  4005b4:	01 1b                	add    DWORD PTR [rbx],ebx
  4005b6:	03 3b                	add    edi,DWORD PTR [rbx]
  4005b8:	30 00                	xor    BYTE PTR [rax],al
  4005ba:	00 00                	add    BYTE PTR [rax],al
  4005bc:	05 00 00 00 1c       	add    eax,0x1c000000
  4005c1:	fe                   	(bad)  
  4005c2:	ff                   	(bad)  
  4005c3:	ff                   	(bad)  
  4005c4:	7c 00                	jl     4005c6 <_IO_stdin_used+0x16>
  4005c6:	00 00                	add    BYTE PTR [rax],al
  4005c8:	4c fe                	rex.WR (bad) 
  4005ca:	ff                   	(bad)  
  4005cb:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
  4005cf:	00 4c ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],cl
  4005d3:	ff a4 00 00 00 7c ff 	jmp    QWORD PTR [rax+rax*1-0x840000]
  4005da:	ff                   	(bad)  
  4005db:	ff c4                	inc    esp
  4005dd:	00 00                	add    BYTE PTR [rax],al
  4005df:	00 ec                	add    ah,ch
  4005e1:	ff                   	(bad)  
  4005e2:	ff                   	(bad)  
  4005e3:	ff 0c 01             	dec    DWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

00000000004005e8 <__FRAME_END__-0xf0>:
  4005e8:	14 00                	adc    al,0x0
  4005ea:	00 00                	add    BYTE PTR [rax],al
  4005ec:	00 00                	add    BYTE PTR [rax],al
  4005ee:	00 00                	add    BYTE PTR [rax],al
  4005f0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4005f3:	00 01                	add    BYTE PTR [rcx],al
  4005f5:	78 10                	js     400607 <_IO_stdin_used+0x57>
  4005f7:	01 1b                	add    DWORD PTR [rbx],ebx
  4005f9:	0c 07                	or     al,0x7
  4005fb:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  400601:	00 00                	add    BYTE PTR [rax],al
  400603:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400606:	00 00                	add    BYTE PTR [rax],al
  400608:	f8                   	clc    
  400609:	fd                   	std    
  40060a:	ff                   	(bad)  
  40060b:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  400615:	00 00                	add    BYTE PTR [rax],al
  400617:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  40061a:	00 00                	add    BYTE PTR [rax],al
  40061c:	00 00                	add    BYTE PTR [rax],al
  40061e:	00 00                	add    BYTE PTR [rax],al
  400620:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400623:	00 01                	add    BYTE PTR [rcx],al
  400625:	78 10                	js     400637 <_IO_stdin_used+0x87>
  400627:	01 1b                	add    DWORD PTR [rbx],ebx
  400629:	0c 07                	or     al,0x7
  40062b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  400631:	00 00                	add    BYTE PTR [rax],al
  400633:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400636:	00 00                	add    BYTE PTR [rax],al
  400638:	98                   	cwde   
  400639:	fd                   	std    
  40063a:	ff                   	(bad)  
  40063b:	ff 30                	push   QWORD PTR [rax]
  40063d:	00 00                	add    BYTE PTR [rax],al
  40063f:	00 00                	add    BYTE PTR [rax],al
  400641:	0e                   	(bad)  
  400642:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400645:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400648:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  40064b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  40064e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400650:	2a 33                	sub    dh,BYTE PTR [rbx]
  400652:	24 22                	and    al,0x22
  400654:	00 00                	add    BYTE PTR [rax],al
  400656:	00 00                	add    BYTE PTR [rax],al
  400658:	1c 00                	sbb    al,0x0
  40065a:	00 00                	add    BYTE PTR [rax],al
  40065c:	44 00 00             	add    BYTE PTR [rax],r8b
  40065f:	00 a0 fe ff ff 27    	add    BYTE PTR [rax+0x27fffffe],ah
  400665:	00 00                	add    BYTE PTR [rax],al
  400667:	00 00                	add    BYTE PTR [rax],al
  400669:	41 0e                	rex.B (bad) 
  40066b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400671:	00 00                	add    BYTE PTR [rax],al
  400673:	00 00                	add    BYTE PTR [rax],al
  400675:	00 00                	add    BYTE PTR [rax],al
  400677:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  40067b:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
  40067f:	00 b0 fe ff ff 65    	add    BYTE PTR [rax+0x65fffffe],dh
  400685:	00 00                	add    BYTE PTR [rax],al
  400687:	00 00                	add    BYTE PTR [rax],al
  400689:	42 0e                	rex.X (bad) 
  40068b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  400691:	8e 03                	mov    es,WORD PTR [rbx]
  400693:	45 0e                	rex.RB (bad) 
  400695:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  40069b:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff867014e9 <_end+0xffffffff861004a9>
  4006a1:	06                   	(bad)  
  4006a2:	48 0e                	rex.W (bad) 
  4006a4:	38 83 07 4f 0e 40    	cmp    BYTE PTR [rbx+0x400e4f07],al
  4006aa:	70 0e                	jo     4006ba <_IO_stdin_used+0x10a>
  4006ac:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  4006af:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  4006b2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  4006b5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  4006b8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  4006bb:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  4006be:	08 00                	or     BYTE PTR [rax],al
  4006c0:	14 00                	adc    al,0x0
  4006c2:	00 00                	add    BYTE PTR [rax],al
  4006c4:	ac                   	lods   al,BYTE PTR ds:[rsi]
  4006c5:	00 00                	add    BYTE PTR [rax],al
  4006c7:	00 d8                	add    al,bl
  4006c9:	fe                   	(bad)  
  4006ca:	ff                   	(bad)  
  4006cb:	ff 02                	inc    DWORD PTR [rdx]
	...

00000000004006d8 <__FRAME_END__>:
  4006d8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	d0 04 40             	rol    BYTE PTR [rax+rax*2],1
  600e13:	00 00                	add    BYTE PTR [rax],al
  600e15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	b0 04                	mov    al,0x4
  600e1a:	40 00 00             	add    BYTE PTR [rax],al
  600e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	a8 03                	test   al,0x3
  600e42:	40 00 00             	add    BYTE PTR [rax],al
  600e45:	00 00                	add    BYTE PTR [rax],al
  600e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 a4 05 40 00 00 00 	add    BYTE PTR [rbp+rax*1+0x40],ah
  600e56:	00 00                	add    BYTE PTR [rax],al
  600e58:	19 00                	sbb    DWORD PTR [rax],eax
  600e5a:	00 00                	add    BYTE PTR [rax],al
  600e5c:	00 00                	add    BYTE PTR [rax],al
  600e5e:	00 00                	add    BYTE PTR [rax],al
  600e60:	10 0e                	adc    BYTE PTR [rsi],cl
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 00                	add    BYTE PTR [rax],al
  600eb1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600eb4:	00 00                	add    BYTE PTR [rax],al
  600eb6:	00 00                	add    BYTE PTR [rax],al
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 38                	add    BYTE PTR [rax],bh
  600ed1:	00 00                	add    BYTE PTR [rax],al
  600ed3:	00 00                	add    BYTE PTR [rax],al
  600ed5:	00 00                	add    BYTE PTR [rax],al
  600ed7:	00 0b                	add    BYTE PTR [rbx],cl
  600ed9:	00 00                	add    BYTE PTR [rax],al
  600edb:	00 00                	add    BYTE PTR [rax],al
  600edd:	00 00                	add    BYTE PTR [rax],al
  600edf:	00 18                	add    BYTE PTR [rax],bl
  600ee1:	00 00                	add    BYTE PTR [rax],al
  600ee3:	00 00                	add    BYTE PTR [rax],al
  600ee5:	00 00                	add    BYTE PTR [rax],al
  600ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	30 00                	xor    BYTE PTR [rax],al
  600f12:	00 00                	add    BYTE PTR [rax],al
  600f14:	00 00                	add    BYTE PTR [rax],al
  600f16:	00 00                	add    BYTE PTR [rax],al
  600f18:	14 00                	adc    al,0x0
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 78 03             	add    BYTE PTR [rax+0x3],bh
  600f32:	40 00 00             	add    BYTE PTR [rax],al
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
  600f39:	00 00                	add    BYTE PTR [rax],al
  600f3b:	00 00                	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 60 03             	add    BYTE PTR [rax+0x3],ah
  600f42:	40 00 00             	add    BYTE PTR [rax],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 40 03             	add    BYTE PTR [rax+0x3],al
  600f72:	40 00 00             	add    BYTE PTR [rax],al
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 ff                	add    bh,bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 38                	add    BYTE PTR [rax],bh
  600f91:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 e6                	add    dh,ah
  601019:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  60101c:	00 00                	add    BYTE PTR [rax],al
  60101e:	00 00                	add    BYTE PTR [rax],al
  601020:	f6 03 40             	test   BYTE PTR [rbx],0x40
  601023:	00 00                	add    BYTE PTR [rax],al
  601025:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000601028 <__data_start>:
	...

0000000000601030 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601038 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400330>
   a:	74 75                	je     81 <_init-0x400327>
   c:	20 35 2e 32 2e 31    	and    BYTE PTR [rip+0x312e322e],dh        # 312e3240 <_end+0x30ce2200>
  12:	2d 32 32 75 62       	sub    eax,0x62753232
  17:	75 6e                	jne    87 <_init-0x400321>
  19:	74 75                	je     90 <_init-0x400318>
  1b:	32 29                	xor    ch,BYTE PTR [rcx]
  1d:	20 35 2e 32 2e 31    	and    BYTE PTR [rip+0x312e322e],dh        # 312e3251 <_end+0x30ce2211>
  23:	20 32                	and    BYTE PTR [rdx],dh
  25:	30 31                	xor    BYTE PTR [rcx],dh
  27:	35 31 30 31 30       	xor    eax,0x30313031
  2c:	00 55 62             	add    BYTE PTR [rbp+0x62],dl
  2f:	75 6e                	jne    9f <_init-0x400309>
  31:	74 75                	je     a8 <_init-0x400300>
  33:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
  36:	61                   	(bad)  
  37:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  38:	67 20 76 65          	and    BYTE PTR [esi+0x65],dh
  3c:	72 73                	jb     b1 <_init-0x4002f7>
  3e:	69 6f 6e 20 33 2e 37 	imul   ebp,DWORD PTR [rdi+0x6e],0x372e3320
  45:	2e 30 2d 32 75 62 75 	xor    BYTE PTR cs:[rip+0x75627532],ch        # 7562757e <_end+0x7502653e>
  4c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4d:	74 75                	je     c4 <_init-0x4002e4>
  4f:	31 20                	xor    DWORD PTR [rax],esp
  51:	28 74 61 67          	sub    BYTE PTR [rcx+riz*2+0x67],dh
  55:	73 2f                	jae    86 <_init-0x400322>
  57:	52                   	push   rdx
  58:	45                   	rex.RB
  59:	4c                   	rex.WR
  5a:	45                   	rex.RB
  5b:	41 53                	push   r11
  5d:	45 5f                	rex.RB pop r15
  5f:	33 37                	xor    esi,DWORD PTR [rdi]
  61:	30 2f                	xor    BYTE PTR [rdi],ch
  63:	66 69 6e 61 6c 29    	imul   bp,WORD PTR [rsi+0x61],0x296c
  69:	20 28                	and    BYTE PTR [rax],ch
  6b:	62 61                	(bad)  
  6d:	73 65                	jae    d4 <_init-0x4002d4>
  6f:	64 20 6f 6e          	and    BYTE PTR fs:[rdi+0x6e],ch
  73:	20 4c 4c 56          	and    BYTE PTR [rsp+rcx*2+0x56],cl
  77:	4d 20 33             	rex.WRB and BYTE PTR [r11],r14b
  7a:	2e 37                	cs (bad) 
  7c:	2e 30 29             	xor    BYTE PTR cs:[rcx],ch
  7f:	00 47 43             	add    BYTE PTR [rdi+0x43],al
  82:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
  85:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
  88:	75 6e                	jne    f8 <_init-0x4002b0>
  8a:	74 75                	je     101 <_init-0x4002a7>
  8c:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  8f:	39 2e                	cmp    DWORD PTR [rsi],ebp
  91:	32 2d 31 30 75 62    	xor    ch,BYTE PTR [rip+0x62753031]        # 627530c8 <_end+0x62152088>
  97:	75 6e                	jne    107 <_init-0x4002a1>
  99:	74 75                	je     110 <_init-0x400298>
  9b:	31 31                	xor    DWORD PTR [rcx],esi
  9d:	29 20                	sub    DWORD PTR [rax],esp
  9f:	34 2e                	xor    al,0x2e
  a1:	39 2e                	cmp    DWORD PTR [rsi],ebp
  a3:	32 00                	xor    al,BYTE PTR [rax]
